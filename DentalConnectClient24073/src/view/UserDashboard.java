/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.List;
import javax.swing.JOptionPane;
import model.Appointments;
import model.Specialist;
import model.Users;
import service.AppointmentService;

/**
 *
 * @author admin
 */
public class UserDashboard extends javax.swing.JFrame {

    /**
     * Creates new form UserDashboard
     */
    DefaultTableModel tableModel = new DefaultTableModel();
    public UserDashboard() {
        initComponents();
    }
    Users Loggeduser= new Users();
    int selectRow;
    public UserDashboard(Users user) {
        initComponents();
         Loggeduser= user;
        addColumnToTable();
        retrieveUserAppointmentFromDBTable(user.getId());
       tablePanel.setVisible(false);
    }
    private void addColumnToTable(){
        tableModel.addColumn("APPOINTMENT ID");
        tableModel.addColumn("PATIENT ID");
        tableModel.addColumn("DOB");
        tableModel.addColumn("GENDER");
        tableModel.addColumn("DOCTOR");
        tableModel.addColumn("APPOINTMENT TIME");
        tableModel.addColumn("APPOINTMENT DATE");
        userAppointmentmentsTable.setModel(tableModel);
        
    }
     private void retrieveUserAppointmentFromDBTable(int userId){
        try{
            Registry registry =  LocateRegistry.getRegistry("127.0.0.1", 5000);
           AppointmentService intrf = (AppointmentService)registry.lookup("appointment");
           Appointments appointment = new Appointments();
           List<Appointments> AppointmentList = intrf.allAppointments();
            for(Appointments appoint: AppointmentList){
                tableModel.addRow(new Object[]{
                    appoint.getAppId(),
                    appoint.getPatient_id().getId(),
                    appoint.getDate_of_birth(),
                    appoint.getGender(),
                    appoint.getDoctor_id().getDoctor_id(),
                    appoint.getAppointment_time(),
                    appoint.getAppointment_date(),
                    
                });
            }
            
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
     
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        LogoutBtn = new javax.swing.JButton();
        ViewAppointmentsBtn = new javax.swing.JButton();
        bookAppointmentBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        userAppointmentmentsTable = new javax.swing.JTable();
        UpdateAppointmentBtn = new javax.swing.JButton();
        deleteAppointmentBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchTxt = new javax.swing.JTextField();
        SearchBrn = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        LogoutBtn.setText("Log out");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        ViewAppointmentsBtn.setText("View Appointments");
        ViewAppointmentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAppointmentsBtnActionPerformed(evt);
            }
        });

        bookAppointmentBtn.setText("Book Appointment");
        bookAppointmentBtn.setMaximumSize(new java.awt.Dimension(125, 23));
        bookAppointmentBtn.setMinimumSize(new java.awt.Dimension(125, 23));
        bookAppointmentBtn.setPreferredSize(new java.awt.Dimension(125, 23));
        bookAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAppointmentBtnActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/newTeeth (2).jpg"))); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/tooth-drill.png"))); // NOI18N
        jLabel10.setText("DentalConnect");

        userAppointmentmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userAppointmentmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userAppointmentmentsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(userAppointmentmentsTable);

        UpdateAppointmentBtn.setBackground(new java.awt.Color(0, 153, 0));
        UpdateAppointmentBtn.setText("Edit Appointment");
        UpdateAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateAppointmentBtnActionPerformed(evt);
            }
        });

        deleteAppointmentBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteAppointmentBtn.setText("Cancel Appointment");
        deleteAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAppointmentBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(8, 109, 229));
        jLabel1.setText("APPOINTMENTS");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(8, 109, 229));
        jLabel2.setText("USER DASHBOARD");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SearchTxt.setText("ID");

        SearchBrn.setBackground(new java.awt.Color(0, 51, 153));
        SearchBrn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBrn.setText("Search");
        SearchBrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBrnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablePanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2)
                        .addGap(0, 91, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                        .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteAppointmentBtn)
                            .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchBrn)
                            .addComponent(UpdateAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateAppointmentBtn)
                    .addComponent(deleteAppointmentBtn))
                .addGap(18, 18, 18)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBrn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SearchBrn.getAccessibleContext().setAccessibleName("SearchBtn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(LogoutBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bookAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ViewAppointmentsBtn))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewAppointmentsBtn)
                .addGap(10, 10, 10)
                .addComponent(bookAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(LogoutBtn)
                .addContainerGap())
            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userAppointmentmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userAppointmentmentsTableMouseClicked
        selectRow = userAppointmentmentsTable.getSelectedRow();
    }//GEN-LAST:event_userAppointmentmentsTableMouseClicked

    private void deleteAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAppointmentBtnActionPerformed
        // TODO add your handling code here:
       int appointmentToDelete = userAppointmentmentsTable.getSelectedRow();
       DefaultTableModel model = (DefaultTableModel)userAppointmentmentsTable.getModel();
       if(appointmentToDelete < 0){
           JOptionPane.showMessageDialog(this,"Please select the appointment to cancel","Data required",JOptionPane.ERROR_MESSAGE);
       }else{
           
            try{
                 Registry registry =  LocateRegistry.getRegistry("127.0.0.1", 5000);
                            AppointmentService intrf = (AppointmentService)registry.lookup("appointment");
                            Appointments appointment= new Appointments();
      
                            int myindex = userAppointmentmentsTable.getSelectedRow();
                            if(myindex < 0){
           JOptionPane.showMessageDialog(this,"Please select the appointment to delete","Data required",JOptionPane.ERROR_MESSAGE);
       }else{
                            appointment.setAppId(Integer.parseInt(model.getValueAt(myindex, 0).toString()));
                           
                            String feedback = intrf.deleteAppointment(appointment);
                            JOptionPane.showMessageDialog(this, feedback, "Successful", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        catch(Exception ex){
                            ex.printStackTrace();
                        }
       }
    }//GEN-LAST:event_deleteAppointmentBtnActionPerformed

    private void UpdateAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateAppointmentBtnActionPerformed
        // TODO add your handling code here:
        int appointmentToUpdate = userAppointmentmentsTable.getSelectedRow();
       DefaultTableModel modelForUpdate = (DefaultTableModel)userAppointmentmentsTable.getModel();
       if(appointmentToUpdate < 0){
           JOptionPane.showMessageDialog(this,"Please select the appointment to edit","Data required",JOptionPane.ERROR_MESSAGE);
       }else{
           Appointments appointment = new Appointments();
           appointment.setAppId(Integer.parseInt(modelForUpdate.getValueAt(appointmentToUpdate, 0).toString()));
//           Users patient = (Users) modelForUpdate.getValueAt(appointmentToUpdate, 0);
//           appointment.setPatient_id(patient);

              int patientId = (int) modelForUpdate.getValueAt(appointmentToUpdate, 0);
             Users patient = new Users(); // Assuming you have a method to fetch the patient by ID
             patient.setId(patientId);
             appointment.setPatient_id(patient);


           //appointment.setPatient_id(modelForUpdate.getValueAt(appointmentToUpdate, 0));
           UpdateAppointment page = new UpdateAppointment(appointment);
           dispose();
           page.setVisible(true);
       }
        
    }//GEN-LAST:event_UpdateAppointmentBtnActionPerformed

    private void bookAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAppointmentBtnActionPerformed
        BookAppointment page = new BookAppointment(Loggeduser);
        dispose();
        page.setVisible(true);
    }//GEN-LAST:event_bookAppointmentBtnActionPerformed

    private void ViewAppointmentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAppointmentsBtnActionPerformed
        tablePanel.setVisible(true);
    }//GEN-LAST:event_ViewAppointmentsBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        // TODO add your handling code here:
        Login page = new Login();
        dispose();
        page.setVisible(true);

    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void SearchBrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBrnActionPerformed

        // TODO add your handling code here:
        
        try{
            if(SearchTxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Pease provide the Appontment to search!","Data required",JOptionPane.WARNING_MESSAGE);
            }else{
                Appointments appointment = new Appointments();
                appointment.setAppId(Integer.parseInt(SearchTxt.getText()));
                appointment.setPatient_id(Loggeduser);
                SearchAndPrint search = new SearchAndPrint(appointment);
                this.dispose();
                search.setVisible(true);
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
        
        
    }//GEN-LAST:event_SearchBrnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JButton SearchBrn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton UpdateAppointmentBtn;
    private javax.swing.JButton ViewAppointmentsBtn;
    private javax.swing.JButton bookAppointmentBtn;
    private javax.swing.JButton deleteAppointmentBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTable userAppointmentmentsTable;
    // End of variables declaration//GEN-END:variables
}
